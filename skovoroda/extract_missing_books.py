import re

# Read the notes file
with open(r'c:\Repositories\SkovorodaRepoLatest2\skovoroda\lib\data\treatises\6 besida_nazvana_dvoie READ NOTES.txt', 'r', encoding='utf-8') as f:
    content = f.read()

# Map Ukrainian book names to standard abbreviations
book_mapping = {
    # Old Testament
    'Буття': ('GEN', 'Перша книга Мойсеєва: Буття'),
    'Вихід': ('EXO', 'Друга книга Мойсеєва: Вихід'),
    'Левит': ('LEV', 'Третя книга Мойсеєва: Левит'),
    'Числа': ('NUM', 'Четверта книга Мойсеєва: Числа'),
    'Повторення Закону': ('DEU', 'П\'ята книга Мойсеєва: Повторення Закону'),
    'Ісуса Навина': ('JOS', 'Книга Ісуса Навина'),
    'Суддів': ('JDG', 'Книга Суддів'),
    'Рут': ('RUT', 'Книга Рут'),
    'царств': ('1SA', 'Перша книга царств'), # This covers all царств books
    'параліпоменон': ('1CH', 'Перша книга Хроніки'), # Chronicles
    'Йова': ('JOB', 'Книга Йова'),
    'Псалмів': ('PSA', 'Книга Псалмів'),
    'Притч': ('PRO', 'Книга Притч Соломонових'),
    'Екклезіястової': ('ECC', 'Книга Екклезіястова'),
    'Пісня над піснями': ('SNG', 'Пісня над піснями'),
    'Ісаї': ('ISA', 'Книга пророка Ісаї'),
    'Єремії': ('JER', 'Книга пророка Єремії'),
    'Плач Єремії': ('LAM', 'Плач Єремії'),
    'Єзекії': ('EZK', 'Книга пророка Єзекіїла'),
    'Даниїла': ('DAN', 'Книга пророка Даниїла'),
    'Осії': ('HOS', 'Книга пророка Осії'),
    'Амоса': ('AMO', 'Книга пророка Амоса'),
    'Авдія': ('OBA', 'Книга пророка Авдія'),
    'Михея': ('MIC', 'Книга пророка Михея'),
    'Аввакума': ('HAB', 'Книга пророка Аввакума'),
    'Софонії': ('ZEP', 'Книга пророка Софонії'),
    'Захарії': ('ZEC', 'Книга пророка Захарії'),
    'Варуха': ('BAR', 'Книга пророка Варуха'),
    'Ісуса, сина Сирахового': ('SIR', 'Книга Ісуса, сина Сирахового'),
    'Премудрості': ('WIS', 'Книга Премудрості Соломона'),
    
    # New Testament  
    'Матвія': ('MAT', 'Євангелія від св. Матвія'),
    'Марка': ('MRK', 'Євангелія від св. Марка'),
    'Луки': ('LUK', 'Євангелія від св. Луки'),
    'Івана': ('JHN', 'Євангелія від св. Івана'),
    'Дії св. апостолів': ('ACT', 'Дії святих апостолів'),
    'римлян': ('ROM', 'Послання до Римлян'),
    'коринтян': ('1CO', 'Перше послання до коринтян'),
    'ефесян': ('EPH', 'Послання до ефесян'),
    'филип': ('PHP', 'Послання до филип\'ян'),
    'солунян': ('1TH', 'Перше послання до солунян'),
    'Тимофія': ('1TI', 'Перше послання до Тимофія'),
    'євреїв': ('HEB', 'Послання до євреїв'),
    'Якова': ('JAS', 'Послання Апостола Якова'),
    'Петра': ('1PE', 'Перше послання Петра'),
    'Апокаліпсис': ('REV', 'Апокаліпсис'),
}

# Find which books are mentioned in the notes
found_books = set()
for book_name in book_mapping.keys():
    if book_name in content:
        found_books.add(book_name)

# Check for specific patterns
patterns = [
    r'Перше\s+послання\s+(?:св\.\s+ап\.\s+)?(?:Павла\s+)?(?:до\s+)?([А-ЯІЇЄа-яіїє\']+)',
    r'Друге\s+послання\s+(?:св\.\s+ап\.\s+)?(?:Павла\s+)?(?:до\s+)?([А-ЯІЇЄа-яіїє\']+)',
    r'Соборне\s+послання\s+св\.\s+ап\.\s+([А-ЯІЇЄа-яіїє\']+)',
    r'Перша\s+книга\s+([А-ЯІЇЄа-яіїє\']+)',
    r'Друга\s+книга\s+([А-ЯІЇЄа-яіїє\']+)',
    r'Третя\s+книга\s+([А-ЯІЇЄа-яіїє\']+)',
    r'Четверта\s+книга\s+([А-ЯІЇЄа-яіїє\']+)',
]

for pattern in patterns:
    matches = re.findall(pattern, content)
    for match in matches:
        if match == 'Іуди':
            found_books.add('Іуди')

# Get existing books in the component
existing_books = {
    'JHN': 'Євангелія від св. Івана',
    'MRK': 'Євангелія від св. Марка',
    'MAT': 'Євангелія від св. Матвія',
    'ACT': 'Дії святих апостолів',
    'SIR': 'Книга Ісуса, сина Сирахового',
    '1JN': 'Перше соборне послання св. ап. Івана',
    '1TI': 'Перше послання до Тимотея',
    'ROM': 'Послання до Римлян',
    'GAL': 'Послання до Галатів',
    'SNG': 'Пісня над піснями',
    'WIS': 'Книга Премудрості Соломона',
    'PSA': 'Книга Псалмів',
    'JAS': 'Послання Апостола Якова',
    'ISA': 'Книга пророка Ісаї',
    'GEN': 'Книга Буття',
}

# Generate missing books
missing_books = {}
for book_name in found_books:
    if book_name in book_mapping:
        abbrev, full_name = book_mapping[book_name]
        if abbrev not in existing_books:
            missing_books[abbrev] = full_name

# Special cases based on patterns found
if 'Іуди' in content:
    missing_books['JUD'] = 'Соборне послання св. ап. Іуди'

# Add additional books commonly found in biblical texts
additional_checks = {
    'Луки': ('LUK', 'Євангелія від св. Луки'),
    'коринтян': ('2CO', 'Друге послання до коринтян'),
    'Тимофія': ('2TI', 'Друге послання до Тимофія'),
    'солунян': ('2TH', 'Друге послання до солунян'),
    'Петра': ('2PE', 'Друге послання Петра'),
    'Івана': ('2JN', 'Друге послання Івана'),
    'Івана': ('3JN', 'Третє послання Івана'),
    'галатів': ('GAL', 'Послання до Галатів'),
    'филип': ('PHP', 'Послання до филип\'ян'),
    'колосян': ('COL', 'Послання до колосян'),
    'Тита': ('TIT', 'Послання до Тита'),
    'Филимона': ('PHM', 'Послання до Филимона'),
}

for check_name, (abbrev, full_name) in additional_checks.items():
    if check_name in content and abbrev not in existing_books:
        missing_books[abbrev] = full_name

print("Missing books to add:")
for abbrev, full_name in sorted(missing_books.items()):
    print(f"  '{abbrev}': '{full_name}',")

print(f"\nTotal missing: {len(missing_books)}")
